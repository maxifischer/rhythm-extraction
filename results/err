niels@slave:~/Dokumente/Informatik/Master/music/rhythm-extraction/src$ python cv_experiment.py cv
/home/niels/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
---------------- Experiment for simple_cnn--linvar on RhythmData(GTZAN)
get model: input shape (1, 1500, 14)
get model: input shape (1, 1500, 14)
......begin iteration 1/1
2018-09-20 02:34:24.246390: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2018-09-20 02:34:25.603578: W tensorflow/core/framework/allocator.cc:108] Allocation of 30481280 exceeds 10% of system memory.
2018-09-20 02:34:25.603578: W tensorflow/core/framework/allocator.cc:108] Allocation of 30481280 exceeds 10% of system memory.
2018-09-20 02:34:25.606219: W tensorflow/core/framework/allocator.cc:108] Allocation of 24471440 exceeds 10% of system memory.
2018-09-20 02:34:25.618803: W tensorflow/core/framework/allocator.cc:108] Allocation of 30481280 exceeds 10% of system memory.
2018-09-20 02:34:25.618804: W tensorflow/core/framework/allocator.cc:108] Allocation of 30481280 exceeds 10% of system memory.
/home/niels/Dokumente/Informatik/Master/music/rhythm-extraction/src/models.py:298: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  self.w = np.linalg.lstsq(a, Y)[0]
cv: finished fold 1/2
(score was (0.09966260217667638, 0.984375, 0.9846153846153847, 1.0, 0.96875))
cv: finished fold 2/2
(score was (0.1087178657509936, 0.984375, 0.9841269841269841, 0.96875, 1.0))
get model: input shape (1, 750, 14)
get model: input shape (1, 750, 14)
cvacc output is of length 5
finished cv, result:
((0.975, 0.975609756097561, 1.0, 0.95), [0.984375, 0.9843711843711844, 0.984375, 0.984375])
---------------- Experiment for simple_cnn on RhythmData(GTZAN)
get model: input shape (1, 1500, 14)
......begin iteration 1/1
cv: finished fold 1/2
(score was [0.18585903942584991, 0.96875, 0.9699380695819855, 1.0, 0.9337606728076935])
cv: finished fold 2/2
(score was [0.22551918029785156, 0.9375, 0.9309523403644562, 0.8708333373069763, 1.0])
get model: input shape (1, 750, 14)
40/40 [==============================] - 0s 3ms/step
cvacc output is of length 5
finished cv, result:
([0.975, 0.9783782958984375, 1.0, 0.9428571224212646], [0.953125, 0.9504452049732208, 0.9354166686534882, 0.9668803364038467])
---------------- Experiment for linear--linvar on RhythmData(GTZAN)
get model: input shape (1, 1500, 14)
get model: input shape (1, 1500, 14)
......begin iteration 1/1
cv: finished fold 1/2
(score was (0.33779723363419456, 0.890625, 0.8923076923076924, 1.0, 0.8))
cv: finished fold 2/2
(score was (0.2755319922123839, 0.890625, 0.8955223880597014, 0.8571428571428571, 0.9310344827586207))
get model: input shape (1, 750, 14)
get model: input shape (1, 750, 14)
cvacc output is of length 5
finished cv, result:
((0.975, 0.975609756097561, 1.0, 0.95), [0.890625, 0.8939150401836968, 0.9285714285714286, 0.8655172413793104])
---------------- Experiment for linear on RhythmData(GTZAN)
get model: input shape (1, 1500, 14)
......begin iteration 1/1
cv: finished fold 1/2
(score was [0.3103666603565216, 0.890625, 0.8801842927932739, 0.8416666686534882, 0.9411764740943909])
cv: finished fold 2/2
(score was [0.3009267747402191, 0.875, 0.8880307972431183, 0.9722222089767456, 0.7815126180648804])
get model: input shape (1, 750, 14)
40/40 [==============================] - 0s 2ms/step
cvacc output is of length 5
finished cv, result:
([0.975, 0.9783782958984375, 1.0, 0.9428571224212646], [0.8828125, 0.8841075450181961, 0.9069444388151169, 0.8613445460796356])
---------------- Experiment for mean_svm on RhythmData(GTZAN)
get model: input shape (1, 1500, 14)
modelname unknown
......begin iteration 1/1
Traceback (most recent call last):
  File "cv_experiment.py", line 506, in <module>
    results = run_on_all(cv_experiment)
  File "cv_experiment.py", line 464, in run_on_all
    result = experiment(data, model_name, col_test_data)
  File "cv_experiment.py", line 90, in cv_experiment
    cvacc = cv(data.X, data.Y, get_fresh_model, train_model, nfolds=nfolds, nrepetitions=nrepetitions)
  File "/home/niels/Dokumente/Informatik/Master/music/rhythm-extraction/src/utils.py", line 40, in cv
    model = method()
  File "cv_experiment.py", line 83, in get_fresh_model
    reset_weights(model)
  File "/home/niels/Dokumente/Informatik/Master/music/rhythm-extraction/src/models.py", line 278, in reset_weights
    for layer in model.layers:
AttributeError: 'NoneType' object has no attribute 'layers'
